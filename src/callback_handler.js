export function callback(bot) {
    return async (callbackQuery) => {  
        const chatId = callbackQuery.message.chat.id;
        const data = callbackQuery.data;
        const messageId = callbackQuery.message.message_id;
        if (data === "buyRobux") {
            const message = `–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–±—É–∫—Å–æ–≤ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –∫—É–ø–∏—Ç—å?\n–ö—É—Ä—Å —Ä–æ–±—É–∫—Å–æ–≤: 1—Ä—É–± - 1—Ä–æ–±—É–∫—Å `;
            bot.editMessageText(message, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                callback_data: "backToMenu"
                            }
                        ]
                    ]
                }
            });
            chatState[chatId] = "waitMoneyAmount"
        } else if (data === "calculator") {
            bot.editMessageText("üßÆ –Ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–æ–±—É–∫—Å–æ–≤ \n[–ö—É—Ä—Å —Ä–æ–±—É–∫—Å–æ–≤ -> 1 —Ä—É–± - 1.8 —Ä–æ–±—É–∫—Å–∞]\n", {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–ü–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–π–º–ø–∞—Å—Å–∞",
                                callback_data: "gamepassCostCalculator",
                            }
                        ],
                        [
                            {
                                text: "–ü–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–æ–±—É–∫—Å–æ–≤",
                                callback_data: "robuxCostCalculator",
                            }
                        ],
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                callback_data: "backToMenu",
                            }
                        ]
                    ]
                }
            })
        } else if (data === "giveaway") {
            const userId = callbackQuery.from.id;
            db.get(`SELECT userBalance FROM users WHERE userId = ?`, [userId], function (err, row) {
                if (err) {
                    return console.error(err.message);
                }
                const balance = row ? row.userBalance : 0;
                bot.editMessageText(`–í–∞—à —Ç–µ–∫—É—é—â–∏–π –±–∞–ª–∞–Ω—Å —Ä–æ–±—É–∫—Å–æ–≤: ${balance}\n–°–∫–æ–ª—å–∫–æ —Ä–æ–±—É–∫—Å–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏?`, {
                    chat_id: chatId,
                    message_id: messageId,
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                    callback_data: "backToMenu"
                                }
                            ]
                        ]
                    }
                })
                chatState[chatId] = "vivodMoney"
            })

        } else if (data === "profile") {
            const userId = callbackQuery.from.id;
            db.get(`SELECT userBalance FROM users WHERE userId = ?`, [userId], function (err, row) {
                if (err) {
                    return console.error(err.message);
                }
                const balance = row ? row.userBalance : 0;
                const profile = `
    üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å: 
    üÜî –í–∞—à –∞–π–¥–∏ - ${chatId}
    üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å - ${balance} —Ä–æ–±—É–∫—Å–æ–≤
            `
                bot.editMessageText(profile, {
                    chat_id: chatId,
                    message_id: messageId,
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                                    callback_data: "buyRobux"
                                }
                            ],
                            [
                                {
                                    text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                    callback_data: "backToMenu"
                                }
                            ]
                        ]
                    }
                })
            })

        } else if (data === "balance") {
            const userId = callbackQuery.from.id;
            db.get(`SELECT userBalance FROM users WHERE userId = ?`, [userId], function (err, row) {
                if (err) {
                    return console.error(err.message);
                }
                const balance = row ? row.userBalance : 0;
                bot.editMessageText(`–í–∞—à —Ç–µ–∫—É—é—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance} —Ä–æ–±—É–∫—Å–æ–≤\n –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ –∫–æ–º–∞–Ω–¥–µ –Ω–∏–∂–µ`, {
                    chat_id: chatId,
                    message_id: messageId,
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                                    callback_data: "buyRobux"
                                }
                            ],
                            [
                                {
                                    text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                    callback_data: "backToMenu"
                                }
                            ]
                        ]
                    }
                })
            })

        } else if (data === "newsChanel") {
            bot.editMessageText(`–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª:`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                callback_data: "backToMenu"
                            }
                        ]
                    ]
                }
            })
        } else if (data === "helpAdmin") {
            bot.editMessageText(`–¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —Ä–µ–∂–∏–º–µ 24/7 \n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å–º–æ–≥–ª–∏ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                                callback_data: "backToMenu"
                            }
                        ]
                    ]
                }
            })
        } else if (data === "backToMenu") {
            const message = "–í–æ—Ç –º–æ–µ –º–µ–Ω—é:";
            chatState[chatId] = "userState"
            bot.editMessageText(message, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "üí∏–ö—É–ø–∏—Ç—å R$üí∏", callback_data: "buyRobux"
                            },
                            {
                                text: "üí≤–í—ã–≤–µ—Å—Ç–∏üí≤", callback_data: "giveaway"
                            }
                        ],
                        [
                            {
                                text: "üë§–ü—Ä–æ—Ñ–∏–ª—åüë§", callback_data: "profile"
                            }
                        ],
                        [
                            {
                                text: "üßç–ü–æ–¥–¥–µ—Ä–∂–∫–∞üßç", callback_data: "helpAdmin"
                            },
                            {
                                text: "üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞", callback_data: "newsChanel"
                            }
                        ],
                        [
                            {
                                text: "üí∞–ë–∞–ª–∞–Ω—Åüí∞", callback_data: "balance"
                            },
                            {
                                text: 'üè¶–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüè¶', callback_data: "calculator"
                            }
                        ]
                    ]
                }
            }
            )
        } else if (data === "paySberbank") {
            payment = "–°–±–µ—Ä–±–∞–Ω–∫"
            bot.editMessageText(`–°–±–µ—Ä –∫–∞—Ä—Ç–∞ -> 2202 2023 4153 6872\n[–î–º–∏—Ç—Ä–∏–π –¢–∏–º–æ—Ñ–µ–µ–≤–∏—á –®.]\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –∞–π–¥–∏!\n–í–∞—à –∞–π–¥–∏: ${chatId}\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–Ø –æ–ø–ª–∞—Ç–∏–ª",
                                callback_data: "userOplatil"
                            }
                        ],
                        [
                            {
                                text: "–ù–∞–∑–∞–¥",
                                callback_data: "buyRobux"
                            }
                        ]
                    ]
                }
            })
        } else if (data === "payTinkoff") {
            payment = "–¢–∏–Ω—å–∫–æ—Ñ—Ñ"
            bot.editMessageText(`–¢–∏–Ω—å–∫–æ—Ñ—Ñ –∫–∞—Ä—Ç–∞ -> 2200 7007 1276 5014\n[–î–º–∏—Ç—Ä–∏–π –¢–∏–º–æ—Ñ–µ–µ–≤–∏—á –®.]\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –∞–π–¥–∏!\n–í–∞—à –∞–π–¥–∏: ${chatId}\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–Ø –æ–ø–ª–∞—Ç–∏–ª",
                                callback_data: "userOplatil"
                            }
                        ],
                        [
                            {
                                text: "–ù–∞–∑–∞–¥",
                                callback_data: "buyRobux"
                            }
                        ]
                    ]
                }
            })
        } else if (data === "payQIWI") {
            payment = "–ö–∏–≤–∏"
            bot.editMessageText(`QIWI –Ω–æ–º–µ—Ä -> +7 961 439 77 99\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –∞–π–¥–∏!\n–í–∞—à –∞–π–¥–∏: ${chatId}\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–Ø –æ–ø–ª–∞—Ç–∏–ª",
                                callback_data: "userOplatil"
                            }
                        ],
                        [
                            {
                                text: "–ù–∞–∑–∞–¥",
                                callback_data: "buyRobux"
                            }
                        ]
                    ]
                }
            })
        } else if (data === "payKaspi") {
            payment = "–ö–∞—Å–ø–∏"
            bot.editMessageText(`KASPIBANK –Ω–æ–º–µ—Ä -> +7 708 987 95 12\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –∞–π–¥–∏!\n–í–∞—à –∞–π–¥–∏: ${chatId}\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–Ø –æ–ø–ª–∞—Ç–∏–ª",
                                callback_data: "userOplatil"
                            }
                        ],
                        [
                            {
                                text: "–ù–∞–∑–∞–¥",
                                callback_data: "buyRobux"
                            }
                        ]
                    ]
                }
            })
        } else if (data === "userOplatil") {
            bot.editMessageText(`–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! \n–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ 3-—Ö —á–∞—Å–æ–≤!`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                                callback_data: "backToMenu"
                            }
                        ]
                    ]
                }
            })
            const keyboard = {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–ü–æ–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ–π –¥—É—Ä–µ –±–∞–ª–∞–Ω—Å", callback_data: "avtoPopolnenyieDlyaZayavka"
                            }
                        ]
                    ]
                }
            }
            bot.sendMessage(809124390, `–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}, –Ω–∞ —Å—É–º–º—É ${Dividednumber} —Ä—É–±–ª–µ–π!\n–û–ø–ª–∞—Ç–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ —á–µ—Ä–µ–∑ ${payment}`, keyboard)
            specialUserId = chatId
            return specialUserId
        } else if (data === "gamepassCostCalculator") {
        } else if (data === "gamepassCostCalculator") {
        } else if (data === "vivodDa") {
            bot.editMessageText(`–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤—ã–≤–æ–¥–∏—Ç—å ${vivodNumber} —Ä–æ–±—É–∫—Å–æ–≤! \n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥–µ–π–º–ø–∞—Å—Å:`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                                callback_data: "backToMenu"
                            }
                        ]
                    ]
                }
            })
            chatState[chatId] = "linkwait"
            console.log(chatState[chatId])
        } else if (data === "otmenaPayment") {
            bot.editMessageText(`–æ—Ç–º–µ–Ω–∏–ª–∞—Å—å –ø–æ–∫—É–ø–∫–∞`, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                                callback_data: "backToMenu"
                            }
                        ]
                    ]
                }
            })
            chatState[chatId] = "linkwait2"
            console.log(chatState[chatId])
        } else if (data === "avtoPopolnenyieDlyaZayavka") {
            function increaseUserBalance(userId, amount, callback) {
                db.run(
                    `UPDATE users SET userBalance = userBalance + ? WHERE userId = ?`,
                    [amount, userId],
                    function (err) {
                        if (err) {
                            console.error(err.message);
                            callback({ success: false });
                        } else {
                            callback({ success: true });
                        }
                    }
                );
            }
            const chatId = 809124390
            const adminUserId = 809124390
            const targetUserId = specialUserId
            const amount = Dividednumber * 1.8
            if (isAdminUser(adminUserId)) {
                // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                increaseUserBalance(targetUserId, amount, (result) => {
                    if (result.success) {
                        bot.sendMessage(chatId, `–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${targetUserId} —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${amount}`);
                    } else {
                        bot.sendMessage(chatId, `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${targetUserId}`);
                    }
                });
            } else {
                bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã");
        }
    }} 
}